package com.flynnbuc.httpserverwrapper.model;

import com.sun.net.httpserver.HttpExchange;

/**
 * Defines a Request expecting to send and receives responses with a client using JSON
 */
public class NetworkRequest<JSONObject> extends Request<JSONObject> {
    private final HttpExchange exchange;
    private final String path;

    /**
     * Defines a Request created when a context is called by a client
     *
     * @param requestNum unique ID generated by the handler
     * @param exchange HttpExchange object created in the handler when a user sends an http request
     * @param path String path of the request
     */
    public NetworkRequest(long requestNum, HttpExchange exchange, String path) {
        super(requestNum);
        this.exchange = exchange;
        this.path = path;
    }

    public String getPath(){
        return path;
    }

    public HttpExchange getExchange(){
        return exchange;
    }

    /**
     * Can be used to define generic actions to be performed by the request before/after processing<br>
     * Currently does nothing, should be overridden if desired
     *
     * @param object JSONObject received by the user
     * @return JSONObject
     */
    public  JSONObject completeRequest(JSONObject object){
        return object;
    }
}
